
var canvas=document.getElementById("renderCanvas");var startRenderLoop=function(engine,canvas){engine.runRenderLoop(function(){if(sceneToRender&&sceneToRender.activeCamera){sceneToRender.render();}});}
var engine=null;var scene=null;var sceneToRender=null;var createDefaultEngine=function(){return new BABYLON.Engine(canvas,true,{preserveDrawingBuffer:true,stencil:true,disableWebGL2Support:false});};var createScene=function(){var scene=new BABYLON.Scene(engine);var camera=new BABYLON.ArcRotateCamera("camera",BABYLON.Tools.ToRadians(90),BABYLON.Tools.ToRadians(65),60,BABYLON.Vector3.Zero(),scene);camera.lowerRadiusLimit=6;camera.upperRadiusLimit=30;camera.upperBetaLimit=Math.PI/2.2;camera.useFramingBehavior=true;camera.attachControl(canvas,true);const light=new BABYLON.DirectionalLight("dir01",new BABYLON.Vector3(0,-1,1),scene);light.position=new BABYLON.Vector3(0,15,-30);light.intensity=0.9;var lighta=new BABYLON.HemisphericLight("light1",new BABYLON.Vector3(0,1,0),scene);lighta.intensity=0.2;lighta.specular=BABYLON.Color3.Black();const shadowGenerator=new BABYLON.ShadowGenerator(512,light);var ground=BABYLON.MeshBuilder.CreateGround("ground",{width:14,height:14},scene);ground.receiveShadows=true;let groundMaterial=new BABYLON.StandardMaterial("Ground Material",scene);ground.material=groundMaterial;let groundTexture=new BABYLON.Texture("textures/wood.jpg",scene);ground.material.diffuseTexture=groundTexture;ground.material.diffuseTexture.uScale=5;ground.material.diffuseTexture.vScale=5;var mirror=new BABYLON.MirrorTexture("mirror",512,scene);mirror.mirrorPlane=new BABYLON.Plane(0,-1,0,0);mirror.renderList.push(boxt);ground.material.reflectionTexture=mirror;const roofMat=new BABYLON.StandardMaterial("roofMat");roofMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/roof.jpg",scene);const boxMat=new BABYLON.StandardMaterial("boxMat");boxMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/cubehouse.png")
const roofMat2=new BABYLON.StandardMaterial("roofMat2");roofMat2.diffuseColor=new BABYLON.Color3.Blue();const roofMat3=new BABYLON.StandardMaterial("roofMat2");roofMat3.diffuseColor=new BABYLON.Color3(0,1,0);const faceUV=[];faceUV[0]=new BABYLON.Vector4(0.5,0.0,0.75,1.0);faceUV[1]=new BABYLON.Vector4(0.0,0.0,0.25,1.0);faceUV[2]=new BABYLON.Vector4(0.25,0,0.5,1.0);faceUV[3]=new BABYLON.Vector4(0.75,0,1.0,1.0);var box1=BABYLON.MeshBuilder.CreateBox("box1",{faceUV:faceUV,wrap:true});box1.position=new BABYLON.Vector3(-23,0.5,0);box1.rotation.y=Math.PI/4;box1.material=boxMat;const box2=BABYLON.MeshBuilder.CreateBox("box2",{});box2.position=new BABYLON.Vector3(23,0.5,23);box2.rotation.y=Math.PI/4;const box3=BABYLON.MeshBuilder.CreateBox("box3",{});box3.position=new BABYLON.Vector3(23,0.5,0);;box3.rotation.y=Math.PI/4;const roof=BABYLON.MeshBuilder.CreateCylinder("roof",{diameter:1.3,height:1.2,tessellation:3});roof.position=new BABYLON.Vector3(-23,1.2,0);roof.scaling.x=0.75;roof.rotation.z=Math.PI/2;roof.rotation.y=Math.PI/4;roof.material=roofMat;const roof2=BABYLON.MeshBuilder.CreateCylinder("roof",{diameter:1.3,height:1.2,tessellation:3});roof2.position=new BABYLON.Vector3(23,1.2,23);roof2.scaling.x=0.75;roof2.rotation.z=Math.PI/2;roof2.rotation.y=Math.PI/4;roof2.material=roofMat2;const roof3=BABYLON.MeshBuilder.CreateCylinder("roof",{diameter:1.3,height:1.2,tessellation:3});roof3.position=new BABYLON.Vector3(23,1.2,0);roof3.scaling.x=0.75;roof3.rotation.z=Math.PI/2;roof3.rotation.y=Math.PI/4;roof3.material=roofMat3;const buildBox=()=>{const boxMatm=new BABYLON.StandardMaterial("boxMat");boxMatm.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/semihouse.png")
const faceUVm=[];faceUVm[0]=new BABYLON.Vector4(0.6,0.0,1.0,1.0);faceUVm[1]=new BABYLON.Vector4(0.0,0.0,0.4,1.0);faceUVm[2]=new BABYLON.Vector4(0.4,0,0.6,1.0);faceUVm[3]=new BABYLON.Vector4(0.4,0,0.6,1.0);const boxm=BABYLON.MeshBuilder.CreateBox("boxm",{width:2,faceUV:faceUVm,wrap:true});boxm.material=boxMatm;boxm.position.y=0.5;boxm.position.z=-5;return boxm;}
const buildRoof=()=>{const roofMatm=new BABYLON.StandardMaterial("roofMat");roofMatm.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/roof.jpg");const roofm=BABYLON.MeshBuilder.CreateCylinder("roofm",{diameter:1.3,height:1.2,tessellation:3});roofm.material=roofMatm;roofm.scaling.x=0.75;roofm.scaling.y=2;roofm.rotation.z=Math.PI/2;roofm.position.y=1.22;roofm.position.z=-5;return roofm;}
BABYLON.SceneLoader.ImportMeshAsync("","https://assets.babylonjs.com/meshes/","car.babylon").then(()=>{var car=scene.getMeshByName("car");car.position=new BABYLON.Vector3(1,0.5,2)
car.scaling=new BABYLON.Vector3(2,2,2);const animCar=new BABYLON.Animation("carAnimation","position.x",30,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);const carKeys=[];carKeys.push({frame:0,value:-4});carKeys.push({frame:150,value:4});animCar.setKeys(carKeys);car.animations=[];car.animations.push(animCar);scene.beginAnimation(car,0,150,true);const wheelRB=scene.getMeshByName("wheelRB");const wheelRF=scene.getMeshByName("wheelRF");const wheelLB=scene.getMeshByName("wheelLB");const wheelLF=scene.getMeshByName("wheelLF");scene.beginAnimation(wheelRB,0,30,true);scene.beginAnimation(wheelRF,0,30,true);scene.beginAnimation(wheelLB,0,30,true);scene.beginAnimation(wheelLF,0,30,true);});BABYLON.SceneLoader.ImportMeshAsync("him","/scenes/Dude/","Dude.babylon",scene).then((result)=>{var dude=result.meshes[0];dude.scaling=new BABYLON.Vector3(0.03,0.03,0.03);shadowGenerator.addShadowCaster(dude,true);camera.setTarget(dube)
scene.beginAnimation(result.skeletons[0],0,100,true,1.0);const points=[];const slide=function(turn,dist){this.turn=turn;this.dist=dist;}
const track=[];track.push(new slide(Math.PI/2,4));track.push(new slide(3*Math.PI/4,8));track.push(new slide(3*Math.PI/4,8+4*Math.sqrt(2)));let distance=0;let step=0.01;let p=0;scene.onBeforeRenderObservable.add(()=>{dude.movePOV(0,0,step);distance+=step;if(distance>track[p].dist){dude.rotate(BABYLON.Axis.Y,track[p].turn,BABYLON.Space.LOCAL);p+=1;p%=track.length;if(p===0){distance=0;dude.position=new BABYLON.Vector3(2,0,2);dude.rotation=BABYLON.Vector3.Zero();}}});});var largeGroundMat=new BABYLON.BackgroundMaterial("backgroundMaterial",scene);largeGroundMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/valleygrass.png",scene);largeGroundMat.diffuseTexture.hasAlpha=true;largeGroundMat.opacityFresnel=false;largeGroundMat.shadowLevel=0.4;const largeGround=BABYLON.MeshBuilder.CreateGroundFromHeightMap("largeGround","https://assets.babylonjs.com/environments/villageheightmap.png",{width:150,height:150,subdivisions:20,minHeight:0,maxHeight:10});largeGround.position.y=-0.01;largeGround.material=largeGroundMat;const spriteManagerUFO=new BABYLON.SpriteManager("UFOManager","https://assets.babylonjs.com/environments/ufo.png",1,{width:128,height:76});const ufo=new BABYLON.Sprite("ufo",spriteManagerUFO);ufo.playAnimation(0,16,true,125);ufo.position.y=5;ufo.position.z=20;ufo.width=2;ufo.height=1;const spriteManagerTrees=new BABYLON.SpriteManager("treesManager","textures/palm.png",2000,{width:512,height:1024},scene);for(let i=0;i<500;i++){const tree=new BABYLON.Sprite("tree",spriteManagerTrees);tree.position.x=Math.random()*(-30);tree.position.z=Math.random()*20+8;tree.position.y=0.5;}
for(let i=0;i<500;i++){const tree=new BABYLON.Sprite("tree",spriteManagerTrees);tree.position.x=Math.random()*(25)+7;tree.position.z=Math.random()*-35+8;tree.position.y=0.5;}
const skybox=BABYLON.MeshBuilder.CreateBox("skyBox",{size:150},scene);const skyboxMaterial=new BABYLON.StandardMaterial("skyBox",scene);skyboxMaterial.backFaceCulling=false;skyboxMaterial.reflectionTexture=new BABYLON.CubeTexture("textures/skybox",scene);skyboxMaterial.reflectionTexture.coordinatesMode=BABYLON.Texture.SKYBOX_MODE;skyboxMaterial.diffuseColor=new BABYLON.Color3(0,0,0);skyboxMaterial.specularColor=new BABYLON.Color3(0,0,0);skybox.material=skyboxMaterial;const fountainProfile=[new BABYLON.Vector3(0,0,0),new BABYLON.Vector3(10,0,0),new BABYLON.Vector3(10,4,0),new BABYLON.Vector3(8,4,0),new BABYLON.Vector3(8,1,0),new BABYLON.Vector3(1,2,0),new BABYLON.Vector3(1,15,0),new BABYLON.Vector3(3,17,0)];let switched=false;const pointerDown=(mesh)=>{if(mesh===fountain){switched=!switched;if(switched){particleSystem.start();}
else{particleSystem.stop();}}}
scene.onPointerObservable.add((pointerInfo)=>{switch(pointerInfo.type){case BABYLON.PointerEventTypes.POINTERDOWN:if(pointerInfo.pickInfo.hit){pointerDown(pointerInfo.pickInfo.pickedMesh)}
break;}});const fountain=BABYLON.MeshBuilder.CreateLathe("fountain",{shape:fountainProfile,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);fountain.position=new BABYLON.Vector3(4,0,13);fountain.scaling=new BABYLON.Vector3(0.08,0.08,0.08);const particleSystem=new BABYLON.ParticleSystem("particles",5000);particleSystem.particleTexture=new BABYLON.Texture("textures/flare.png");particleSystem.emitter=new BABYLON.Vector3(4,0.8,13);particleSystem.minEmitBox=new BABYLON.Vector3(-0.01,0,-0.01);particleSystem.maxEmitBox=new BABYLON.Vector3(0.01,0,0.01);particleSystem.color1=new BABYLON.Color4(0.7,0.8,1.0,1.0);particleSystem.color2=new BABYLON.Color4(0.2,0.5,1.0,1.0);particleSystem.minSize=0.05;particleSystem.maxSize=0.09;particleSystem.minLifeTime=0.3;particleSystem.maxLifeTime=1.5;particleSystem.emitRate=2500;particleSystem.blendMode=BABYLON.ParticleSystem.BLENDMODE_ONEONE;particleSystem.gravity=new BABYLON.Vector3(0,-9.81,0);particleSystem.direction1=new BABYLON.Vector3(-1,8,1);particleSystem.direction2=new BABYLON.Vector3(1,8,-1);particleSystem.minEmitPower=0.2;particleSystem.maxEmitPower=0.6;particleSystem.updateSpeed=0.01;particleSystem.start();const lampLight=new BABYLON.SpotLight("lampLight",BABYLON.Vector3.Zero(),new BABYLON.Vector3(0,-1,0),Math.PI,1,scene);lampLight.diffuse=BABYLON.Color3.Yellow();const lampShape=[];for(let i=0;i<20;i++){lampShape.push(new BABYLON.Vector3(Math.cos(i*Math.PI/10),Math.sin(i*Math.PI/10),0));}
lampShape.push(lampShape[0]);const lampPath=[];lampPath.push(new BABYLON.Vector3(0,0,0));lampPath.push(new BABYLON.Vector3(0,10,0));for(let i=0;i<20;i++){lampPath.push(new BABYLON.Vector3(1+Math.cos(Math.PI-i*Math.PI/40),10+Math.sin(Math.PI-i*Math.PI/40),0));}
lampPath.push(new BABYLON.Vector3(3,11,0));const yellowMat=new BABYLON.StandardMaterial("yellowMat");yellowMat.emissiveColor=BABYLON.Color3.Yellow();const lamp=BABYLON.MeshBuilder.ExtrudeShape("lamp",{cap:BABYLON.Mesh.CAP_END,shape:lampShape,path:lampPath,scale:0.5});lamp.position=new BABYLON.Vector3(1,0,-18);lamp.scaling=new BABYLON.Vector3(0.5,0.5,0.5);const bulb=BABYLON.MeshBuilder.CreateSphere("bulb",{diameterX:1.5,diameterZ:0.8});bulb.material=yellowMat;bulb.parent=lamp;bulb.position.x=2;bulb.position.y=10.5;lampLight.parent=bulb;const adt=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("UI");panel=new BABYLON.GUI.StackPanel();panel.width="110px";panel.top="-65px";panel.left="-25px";panel.horizontalAlignment=BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;panel.verticalAlignment=BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;adt.addControl(panel);const header=new BABYLON.GUI.TextBlock();header.text="Night to Day";header.height="30px";header.color="white";panel.addControl(header);const slider=new BABYLON.GUI.Slider();slider.minimum=0;slider.maximum=1;slider.borderColor="black";slider.color="gray";slider.background="white";slider.value=1;slider.height="20px";slider.width="200px";slider.onValueChangedObservable.add((value)=>{if(light){light.intensity=value;}});panel.addControl(slider);var addButton=function(text,callback){var button=BABYLON.GUI.Button.CreateSimpleButton("button",text);button.width="140px";button.height="40px";button.color="white";button.background="green";button.paddingLeft="10px";button.paddingRight="10px";button.onPointerUpObservable.add(function(){callback();});panel.addControl(button);}
addButton("Play",function(){animationGroup.play(true);});addButton("Pause",function(){animationGroup.pause();});addButton("Stop",function(){animationGroup.reset();animationGroup.stop();});var materialBox=new BABYLON.StandardMaterial("texture1",scene);materialBox.diffuseColor=new BABYLON.Color3(0,1,0);const box=BABYLON.MeshBuilder.CreateBox("box",{});box.position.x=6;box.position.y=0.5;box.position.z=-6;box.material=materialBox;var boxt=BABYLON.Mesh.CreateBox("Box2",1.0,scene);boxt.position.x=5;boxt.position.y=1;var materialBox2=new BABYLON.StandardMaterial("texture2",scene);materialBox2.diffuseTexture=new BABYLON.Texture("textures/crate.png",scene);materialBox2.diffuseTexture.hasAlpha=true;boxt.material=materialBox2;const frameRate=6;const xSlide=new BABYLON.Animation("xSlide","position.x",frameRate,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);const keyFrames=[];keyFrames.push({frame:0,value:6});keyFrames.push({frame:frameRate,value:-6});keyFrames.push({frame:2*frameRate,value:6});xSlide.setKeys(keyFrames);box.animations.push(xSlide);var animation1=new BABYLON.Animation("tutoAnimation","scaling.x",30,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);var keys=[];keys.push({frame:0,value:1});keys.push({frame:20,value:0.2});keys.push({frame:100,value:1});animation1.setKeys(keys);var animation2=new BABYLON.Animation("tutoAnimation","rotation.y",30,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);keys=[];keys.push({frame:0,value:0});keys.push({frame:40,value:Math.PI});keys.push({frame:80,value:0});animation2.setKeys(keys);var animation3=new BABYLON.Animation("tutoAnimation","rotation.y",30,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);keys=[];keys.push({frame:0,value:0});keys.push({frame:40,value:Math.PI});keys.push({frame:80,value:0});animation3.setKeys(keys);var animationGroup=new BABYLON.AnimationGroup("my group");animationGroup.addTargetedAnimation(xSlide,box);animationGroup.addTargetedAnimation(animation1,box);animationGroup.addTargetedAnimation(animation2,box);animationGroup.addTargetedAnimation(animation3,boxt);animationGroup.normalize(0,100);var door=BABYLON.MeshBuilder.CreateBox("door",{width:2,height:4,depth:0.1},scene);var hinge=BABYLON.MeshBuilder.CreateBox("hinge",{},scene)
hinge.isVisible=false;hinge.position.x=1;hinge.position.y=2;hinge.position.z=7;door.parent=hinge;door.position.x=1;var sphereLight=BABYLON.MeshBuilder.CreateSphere("sphere",{diameter:0.2},scene);sphereLight.material=new BABYLON.StandardMaterial("",scene);sphereLight.material.emissiveColor=new BABYLON.Color3(1,1,1);sphereLight.position.x=-1;sphereLight.position.y=3;sphereLight.position.z=-1;sphereLights=[sphereLight];lightPositions=[-1,3,-1]
for(var i=0;i<1;i++){var rotate=new BABYLON.Animation("rotate","rotation.y",frameRate,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);var rotate_keys=[];rotate_keys.push({frame:0,value:0});rotate_keys.push({frame:9*frameRate,value:0});rotate_keys.push({frame:14*frameRate,value:Math.PI});rotate.setKeys(rotate_keys);var movein=new BABYLON.Animation("movein","position",frameRate,BABYLON.Animation.ANIMATIONTYPE_VECTOR3,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);var movein_keys=[];movein_keys.push({frame:0,value:new BABYLON.Vector3(0,5,-30)});movein_keys.push({frame:3*frameRate,value:new BABYLON.Vector3(0,2,-10)});movein_keys.push({frame:5*frameRate,value:new BABYLON.Vector3(0,2,-10)});movein_keys.push({frame:8*frameRate,value:new BABYLON.Vector3(-2,2,3)});movein.setKeys(movein_keys);var sweep=new BABYLON.Animation("sweep","rotation.y",frameRate,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);var sweep_keys=[];sweep_keys.push({frame:0,value:0});sweep_keys.push({frame:3*frameRate,value:0});sweep_keys.push({frame:5*frameRate,value:Math.PI/3});sweep_keys.push({frame:13*frameRate,value:Math.PI/3});sweep_keys.push({frame:15*frameRate,value:0});sweep.setKeys(sweep_keys);var lightDimmer=new BABYLON.Animation("dimmer","intensity",frameRate,BABYLON.Animation.ANIMATIONTYPE_FLOAT,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);var light_keys=[];light_keys.push({frame:0,value:0});light_keys.push({frame:7*frameRate,value:0});light_keys.push({frame:10*frameRate,value:1});light_keys.push({frame:14*frameRate,value:1});light_keys.push({frame:15*frameRate,value:0});lightDimmer.setKeys(light_keys);let wallMaterial=new BABYLON.StandardMaterial("Ground Material",scene);wallMaterial.alpha=0.5;let wallTexture=new BABYLON.Texture("https://www.babylonjs-playground.com/textures/floor.png");var wall1=BABYLON.MeshBuilder.CreateBox("door",{width:8,height:6,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall1.position.x=-3;wall1.position.y=3;wall1.position.z=7;wall1.material=wallMaterial;wall1.receiveShadows=true;wall1.material.diffuseTexture=wallTexture;var wall2=BABYLON.MeshBuilder.CreateBox("door2",{width:4,height:6,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall2.position.x=5;wall2.position.y=3;wall2.position.z=7;wall2.material=wallMaterial;wall2.receiveShadows=true;wall2.material.diffuseTexture=wallTexture;var wall3=BABYLON.MeshBuilder.CreateBox("door3",{width:2,height:2,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall3.position.x=2;wall3.position.y=5;wall3.position.z=7;wall3.material=wallMaterial;wall3.receiveShadows=true;wall3.material.diffuseTexture=wallTexture;var wall4=BABYLON.MeshBuilder.CreateBox("door4",{width:14,height:6,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall4.position.x=0.1;wall4.position.y=3;wall4.position.z=-7;wall4.material=wallMaterial;wall4.receiveShadows=true;wall4.material.diffuseTexture=wallTexture;var wall5=BABYLON.MeshBuilder.CreateBox("door5",{width:14,height:6,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall5.position.x=-7;wall5.position.y=3;wall5.position.z=0;wall5.rotation.y=Math.PI/2;wall5.material=wallMaterial;wall5.receiveShadows=true;wall5.material.diffuseTexture=wallTexture;var wall6=BABYLON.MeshBuilder.CreateBox("door6",{width:14,height:6,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);wall6.rotation.y=Math.PI/2;wall6.position.x=7;wall6.position.y=3;wall6.position.z=0;wall6.material=wallMaterial;wall6.receiveShadows=true;wall6.material.diffuseTexture=wallTexture;var rooft=BABYLON.MeshBuilder.CreateBox("door",{width:14,height:14,depth:0.1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene);rooft.rotation.x=Math.PI/2;rooft.position.x=0;rooft.position.y=6;rooft.position.z=0;rooft.material=wallMaterial;rooft.receiveShadows=true;rooft.material.diffuseTexture=wallTexture}
BABYLON.SceneLoader.ImportMesh("","https://assets.babylonjs.com/meshes/","HVGirl.glb",scene,function(newMeshes,particleSystems,skeletons,animationGroups){hero=newMeshes[0];hero.position.x=-1;hero.position.z=-1;hero.scaling.scaleInPlace(0.1);var heroSpeed=0.03;var heroSpeedBackwards=0.01;var heroRotationSpeed=0.1;var animating=true;const walkAnim=scene.getAnimationGroupByName("Walking");const walkBackAnim=scene.getAnimationGroupByName("WalkingBack");const idleAnim=scene.getAnimationGroupByName("Idle");const sambaAnim=scene.getAnimationGroupByName("Samba");sambaAnim.start(true,1.0,sambaAnim.from,sambaAnim.to,false);});var pointerDragBehavior=new BABYLON.PointerDragBehavior({dragAxis:new BABYLON.Vector3(1,0,0)});pointerDragBehavior.useObjectOrientationForDragging=false;pointerDragBehavior.onDragStartObservable.add((event)=>{console.log("dragStart");console.log(event);})
pointerDragBehavior.onDragObservable.add((event)=>{console.log("drag");console.log(event);})
pointerDragBehavior.onDragEndObservable.add((event)=>{console.log("dragEnd");console.log(event);})
boxt.addBehavior(pointerDragBehavior);function addGunSight(scene){if(scene.activeCameras.length===0){scene.activeCameras.push(scene.activeCamera);}
var secondCamera=new BABYLON.FreeCamera("GunSightCamera",new BABYLON.Vector3(0,0,-50),scene);secondCamera.mode=BABYLON.Camera.ORTHOGRAPHIC_CAMERA;secondCamera.layerMask=0x20000000;scene.activeCameras.push(secondCamera);var meshes=[];var h=100;var w=100;var y=BABYLON.Mesh.CreateBox("y",h*.2,scene);y.scaling=new BABYLON.Vector3(0.05,1,1);y.position=new BABYLON.Vector3(0,0,0);meshes.push(y);var x=BABYLON.Mesh.CreateBox("x",h*.2,scene);x.scaling=new BABYLON.Vector3(1,0.05,1);x.position=new BABYLON.Vector3(0,0,0);meshes.push(x);var lineTop=BABYLON.Mesh.CreateBox("lineTop",w*.8,scene);lineTop.scaling=new BABYLON.Vector3(1,0.005,1);lineTop.position=new BABYLON.Vector3(0,h*0.5,0);meshes.push(lineTop);var lineBottom=BABYLON.Mesh.CreateBox("lineBottom",w*.8,scene);lineBottom.scaling=new BABYLON.Vector3(1,0.005,1);lineBottom.position=new BABYLON.Vector3(0,h*-0.5,0);meshes.push(lineBottom);var lineLeft=BABYLON.Mesh.CreateBox("lineLeft",h,scene);lineLeft.scaling=new BABYLON.Vector3(0.010,1,1);lineLeft.position=new BABYLON.Vector3(w*-.4,0,0);meshes.push(lineLeft);var lineRight=BABYLON.Mesh.CreateBox("lineRight",h,scene);lineRight.scaling=new BABYLON.Vector3(0.010,1,1);lineRight.position=new BABYLON.Vector3(w*.4,0,0);meshes.push(lineRight);var gunSight=BABYLON.Mesh.MergeMeshes(meshes);gunSight.name="gunSight";gunSight.layerMask=0x20000000;gunSight.freezeWorldMatrix();var mat=new BABYLON.StandardMaterial("emissive mat",scene);mat.checkReadyOnlyOnce=true;mat.emissiveColor=new BABYLON.Color3(0,1,0);gunSight.material=mat;}
var ground=BABYLON.Mesh.CreateGround("ground1",12,12,2,scene);ground.position=new BABYLON.Vector3(0,0,-18)
var backgroundMaterial=new BABYLON.BackgroundMaterial("backgroundMaterial",scene);backgroundMaterial.diffuseTexture=new BABYLON.Texture("textures/grass.jpg",scene);backgroundMaterial.diffuseTexture.uScale=5.0;backgroundMaterial.diffuseTexture.vScale=5.0;backgroundMaterial.shadowLevel=0.4;backgroundMaterial.diffuseTexture.hasAlpha=true;backgroundMaterial.opacityFresnel=false;backgroundMaterial.reflectionTexture=new BABYLON.CubeTexture("textures/TropicalSunnyDay",scene);backgroundMaterial.reflectionTexture.coordinatesMode=BABYLON.Texture.SKYBOX_MODE;ground.material=backgroundMaterial;const spriteManagerPlayer=new BABYLON.SpriteManager("playerManager","textures/player.png",3,64);const player=new BABYLON.Sprite("player0",spriteManagerPlayer);player.position=new BABYLON.Vector3(0,0.5,20);player.playAnimation(0,40,true,100);return scene;};const buildCar=()=>{const outline=[new BABYLON.Vector3(-0.3,0,-0.1),new BABYLON.Vector3(0.2,0,-0.1),]
for(let i=0;i<20;i++){outline.push(new BABYLON.Vector3(0.2*Math.cos(i*Math.PI/40),0,0.2*Math.sin(i*Math.PI/40)-0.1));}
outline.push(new BABYLON.Vector3(0,0,0.1));outline.push(new BABYLON.Vector3(-0.3,0,0.1));const faceUV=[];faceUV[0]=new BABYLON.Vector4(0,0.5,0.38,1);faceUV[1]=new BABYLON.Vector4(0,0,1,0.5);faceUV[2]=new BABYLON.Vector4(0.38,1,0,0.5);const carMat=new BABYLON.StandardMaterial("carMat");carMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/car.png");const car=BABYLON.MeshBuilder.ExtrudePolygon("car",{shape:outline,depth:0.2,faceUV:faceUV,wrap:true});car.material=carMat;const wheelUV=[];wheelUV[0]=new BABYLON.Vector4(0,0,1,1);wheelUV[1]=new BABYLON.Vector4(0,0.5,0,0.5);wheelUV[2]=new BABYLON.Vector4(0,0,1,1);const wheelMat=new BABYLON.StandardMaterial("wheelMat");wheelMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/wheel.png");wheelRB=BABYLON.MeshBuilder.CreateCylinder("wheelRB",{diameter:0.125,height:0.05,faceUV:wheelUV})
wheelRB.material=wheelMat;wheelRB.parent=car;wheelRB.position.z=-0.1;wheelRB.position.x=-0.2;wheelRB.position.y=0.035;wheelRF=wheelRB.clone("wheelRF");wheelRF.position.x=0.1;wheelLB=wheelRB.clone("wheelLB");wheelLB.position.y=-0.2-0.035;wheelLF=wheelRF.clone("wheelLF");wheelLF.position.y=-0.2-0.035;return car;}
const buildGround=()=>{const groundMat=new BABYLON.StandardMaterial("groundMat");groundMat.diffuseColor=new BABYLON.Color3(0,1,0);const ground=BABYLON.MeshBuilder.CreateGround("ground",{width:15,height:16});ground.receiveShadows=true;ground.material=groundMat;}
const buildHouse=(width)=>{const box=buildBox(width);const roof=buildRoof(width);return BABYLON.Mesh.MergeMeshes([box,roof],true,false,null,false,true);}
const buildBox=(width)=>{const boxMat=new BABYLON.StandardMaterial("boxMat");if(width==2){boxMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/semihouse.png")}
else{boxMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/cubehouse.png");}
const faceUV=[];if(width==2){faceUV[0]=new BABYLON.Vector4(0.6,0.0,1.0,1.0);faceUV[1]=new BABYLON.Vector4(0.0,0.0,0.4,1.0);faceUV[2]=new BABYLON.Vector4(0.4,0,0.6,1.0);faceUV[3]=new BABYLON.Vector4(0.4,0,0.6,1.0);}
else{faceUV[0]=new BABYLON.Vector4(0.5,0.0,0.75,1.0);faceUV[1]=new BABYLON.Vector4(0.0,0.0,0.25,1.0);faceUV[2]=new BABYLON.Vector4(0.25,0,0.5,1.0);faceUV[3]=new BABYLON.Vector4(0.75,0,1.0,1.0);}
const box=BABYLON.MeshBuilder.CreateBox("box",{width:width,faceUV:faceUV,wrap:true});box.material=boxMat;box.position.y=0.5;return box;}
const buildRoof=(width)=>{const roofMat=new BABYLON.StandardMaterial("roofMat");roofMat.diffuseTexture=new BABYLON.Texture("https://assets.babylonjs.com/environments/roof.jpg");const roof=BABYLON.MeshBuilder.CreateCylinder("roof",{diameter:1.3,height:1.2,tessellation:3});roof.material=roofMat;roof.scaling.x=0.75;roof.scaling.y=width;roof.rotation.z=Math.PI/2;roof.position.y=1.22;return roof;}
window.initFunction=async function(){var asyncEngineCreation=async function(){try{return createDefaultEngine();}catch(e){console.log("the available createEngine function failed. Creating the default engine instead");return createDefaultEngine();}}
window.engine=await asyncEngineCreation();if(!engine)throw'engine should not be null.';startRenderLoop(engine,canvas);window.scene=createScene();};initFunction().then(()=>{sceneToRender=scene});window.addEventListener("resize",function(){engine.resize();});